{"version":3,"sources":["../../../../src/lib/series/PointAndFigureSeries.js"],"names":["React","Component","PropTypes","GenericChartComponent","getAxisCanvas","isDefined","isNotDefined","PointAndFigureSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","columns","getColumns","clip","stroke","fill","strokeWidth","className","map","col","idx","offset","boxes","box","i","direction","up","open","columnWidth","close","down","boxHeight","defaultProps","lineWidth","forEach","offsetX","offsetY","fillStyle","strokeStyle","beginPath","moveTo","lineTo","x","y","rx","ry","ellipse","Math","PI","width","length","anyBox","j","abs","filter","d","xOffset"],"mappings":"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","file":"PointAndFigureSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass PointAndFigureSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\tdrawOnCanvas(ctx, this.props, columns);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { stroke, fill, strokeWidth, className } = this.props;\n\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{columns.map((col, idx) => (\n\t\t\t\t\t<g key={idx} className={col.className} transform={`translate(${ col.offset[0] }, ${ col.offset[1] })`}>\n\t\t\t\t\t\t{col.boxes.map((box, i) => {\n\t\t\t\t\t\t\tif (col.direction > 0) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<g key={`${ idx }-${ i }`}>\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.open} x2={box.columnWidth} y2={box.close} />\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.close} x2={box.columnWidth} y2={box.open} />\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ellipse key={`${ idx }-${ i }`}\n\t\t\t\t\t\t\t\t\tclassName=\"down\" strokeWidth={strokeWidth} stroke={stroke.down} fill={fill.down}\n\t\t\t\t\t\t\t\t\tcx={box.columnWidth / 2} cy={(box.open + box.close) / 2}\n\t\t\t\t\t\t\t\t\trx={box.columnWidth / 2} ry={box.boxHeight / 2} />\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</g>\n\t\t\t\t))}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nPointAndFigureSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.object.isRequired,\n\tfill: PropTypes.object.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nPointAndFigureSeries.defaultProps = {\n\tclassName: \"react-stockcharts-point-and-figure\",\n\tstrokeWidth: 1,\n\tstroke: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#FF0000\"\n\t},\n\tfill: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, props, columns) {\n\tconst { stroke, fill, strokeWidth } = props;\n\n\tctx.lineWidth = strokeWidth;\n\n\tcolumns.forEach(col => {\n\t\tconst [offsetX, offsetY] = col.offset;\n\t\tcol.boxes.forEach(box => {\n\t\t\tif (col.direction > 0) {\n\t\t\t\tctx.fillStyle = fill.up;\n\t\t\t\tctx.strokeStyle = stroke.up;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = fill.down;\n\t\t\t\tctx.strokeStyle = stroke.down;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tconst [x, y] = [offsetX + box.columnWidth / 2, offsetY + box.open + box.boxHeight / 2];\n\t\t\t\tconst [rx, ry] = [box.columnWidth / 2, box.boxHeight / 2];\n\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t});\n\t});\n\n\tctx.stroke();\n}\n\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst columnWidth = (width / (plotData.length - 1));\n\n\tlet anyBox, j = 0;\n\twhile (isNotDefined(anyBox)) {\n\t\tif (isDefined(plotData[j].close)) {\n\t\t\tanyBox = plotData[j].boxes[0];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\n\tconst boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n\n\tconst columns = plotData\n\t\t.filter(d => isDefined(d.close))\n\t\t.map(d => {\n\t\t\tconst boxes = d.boxes.map((box) => ({\n\t\t\t\tcolumnWidth: columnWidth,\n\t\t\t\tboxHeight: boxHeight,\n\t\t\t\topen: yScale(box.open),\n\t\t\t\tclose: yScale(box.close),\n\t\t\t}));\n\n\t\t\tconst xOffset = (xScale(xAccessor(d)) - (columnWidth / 2));\n\t\t\treturn {\n\t\t\t\tboxes: boxes,\n\t\t\t\tdirection: d.direction,\n\t\t\t\toffset: [xOffset, 0],\n\t\t\t};\n\t\t});\n\treturn columns;\n}\n\nexport default PointAndFigureSeries;\n"]}
{"version":3,"sources":["../../../../src/lib/series/OverlayBarSeries.js"],"names":["merge","React","Component","PropTypes","GenericChartComponent","getAxisCanvas","drawOnCanvas2","getBarsSVG2","isDefined","isNotDefined","first","last","functor","OverlayBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","yAccessor","xAccessor","xScale","yScale","chartConfig","plotData","bars","getBars","clip","defaultProps","baseAt","range","direction","className","stroke","fill","opacity","widthRatio","getClassName","getFill","getBase","width","Math","abs","bw","length","barWidth","round","offset","map","innerBars","eachYAccessor","i","yValue","d","undefined","xValue","x","y","filter","b","h","height"],"mappings":"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","file":"OverlayBarSeries.js","sourcesContent":["\"use strict\";\n\nimport { merge } from \"d3-array\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { drawOnCanvas2, getBarsSVG2 } from \"./StackedBarSeries\";\nimport { isDefined, isNotDefined, first, last, functor } from \"../utils\";\n\nclass OverlayBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst bars = getBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\n\t\tdrawOnCanvas2(this.props, ctx, bars);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst bars = getBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\t\treturn <g className=\"react-stockcharts-bar-series\">\n\t\t\t{getBarsSVG2(this.props, bars)}\n\t\t</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tclip={clip}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nOverlayBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidthRatio: PropTypes.number.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\txAccessor: PropTypes.func,\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\n\txScale: PropTypes.func,\n\tyScale: PropTypes.func,\n\tplotData: PropTypes.array,\n\tclip: PropTypes.bool.isRequired,\n};\n\nOverlayBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => first(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: false,\n\tfill: \"#4682B4\",\n\topacity: 1,\n\twidthRatio: 0.5,\n\tclip: true,\n};\n\nfunction getBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n\tconst { baseAt, className, fill, stroke, widthRatio } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst width = Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData))));\n\n\n\tconst bw = (width / (plotData.length - 1) * widthRatio);\n\tconst barWidth = Math.round(bw);\n\tconst offset = (barWidth === 1 ? 0 : 0.5 * bw);\n\n\t// console.log(xScale.domain(), yScale.domain());\n\n\tconst bars = plotData\n\t\t.map(d => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet innerBars = yAccessor.map((eachYAccessor, i) => {\n\t\t\t\tconst yValue = eachYAccessor(d);\n\t\t\t\tif (isNotDefined(yValue)) return undefined;\n\n\t\t\t\tconst xValue = xAccessor(d);\n\t\t\t\tconst x = Math.round(xScale(xValue)) - offset;\n\t\t\t\tconst y = yScale(yValue);\n\t\t\t\t// console.log(yValue, y, xValue, x)\n\t\t\t\treturn {\n\t\t\t\t\twidth: barWidth,\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: y,\n\t\t\t\t\tclassName: getClassName(d, i),\n\t\t\t\t\tstroke: stroke ? getFill(d, i) : \"none\",\n\t\t\t\t\tfill: getFill(d, i),\n\t\t\t\t\ti,\n\t\t\t\t};\n\t\t\t}).filter(yValue => isDefined(yValue));\n\n\t\t\tlet b = getBase(xScale, yScale, d);\n\t\t\tlet h;\n\t\t\tfor (let i = innerBars.length - 1; i >= 0; i--) {\n\t\t\t\th = b - innerBars[i].y;\n\t\t\t\tif (h < 0) {\n\t\t\t\t\tinnerBars[i].y = b;\n\t\t\t\t\th = -1 * h;\n\t\t\t\t}\n\t\t\t\tinnerBars[i].height = h;\n\t\t\t\tb = innerBars[i].y;\n\t\t\t}\n\t\t\treturn innerBars;\n\t\t});\n\n\treturn merge(bars);\n}\n\nexport default OverlayBarSeries;\n"]}
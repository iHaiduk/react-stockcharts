{"version":3,"sources":["../../../../src/lib/axes/AxisLine.js"],"names":["React","Component","PropTypes","first","last","hexToRGBA","AxisLine","props","orient","outerTickSize","fill","stroke","strokeWidth","className","shapeRendering","opacity","range","sign","d","defaultProps","drawOnCanvasStatic","ctx","xAxis","lineWidth","strokeStyle","beginPath","moveTo","lineTo"],"mappings":"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","file":"AxisLine.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { first, last, hexToRGBA } from \"../utils\";\n\n/*\nfunction d3_scaleExtent(domain) {\n\tvar start = domain[0], stop = domain[domain.length - 1];\n\treturn start < stop ? [start, stop] : [stop, start];\n}\n\nfunction d3_scaleRange(scale) {\n\treturn scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n}\n*/\nclass AxisLine extends Component {\n\trender() {\n\t\tconst { orient, outerTickSize, fill, stroke, strokeWidth, className, shapeRendering, opacity, range } = this.props;\n\t\tconst sign = orient === \"top\" || orient === \"left\" ? -1 : 1;\n\n\t\t// var range = d3_scaleRange(scale);\n\n\t\tlet d;\n\n\t\tif (orient === \"bottom\" || orient === \"top\") {\n\t\t\td = \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize;\n\t\t} else {\n\t\t\td = \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize;\n\t\t}\n\n\t\treturn (\n\t\t\t<path\n\t\t\t\tclassName={className}\n\t\t\t\tshapeRendering={shapeRendering}\n\t\t\t\td={d}\n\t\t\t\tfill={fill}\n\t\t\t\topacity={opacity}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={strokeWidth} >\n\t\t\t</path>\n\t\t);\n\t}\n}\n\nAxisLine.propTypes = {\n\tclassName: PropTypes.string,\n\tshapeRendering: PropTypes.string,\n\torient: PropTypes.string.isRequired,\n\tscale: PropTypes.func.isRequired,\n\touterTickSize: PropTypes.number,\n\tfill: PropTypes.string,\n\tstroke: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\topacity: PropTypes.number,\n\trange: PropTypes.array,\n};\n\nAxisLine.defaultProps = {\n\tclassName: \"react-stockcharts-axis-line\",\n\tshapeRendering: \"crispEdges\",\n\touterTickSize: 0,\n\tfill: \"none\",\n\tstroke: \"#000000\",\n\tstrokeWidth: 1,\n\topacity: 1,\n};\n\nAxisLine.drawOnCanvasStatic = (props, ctx/* , xScale, yScale*/) => {\n\tprops = { ...AxisLine.defaultProps, ...props };\n\n\tconst { orient, outerTickSize, stroke, strokeWidth, opacity, range } = props;\n\n\tconst sign = orient === \"top\" || orient === \"left\" ? -1 : 1;\n\tconst xAxis = (orient === \"bottom\" || orient === \"top\");\n\n\t// var range = d3_scaleRange(xAxis ? xScale : yScale);\n\n\tctx.lineWidth = strokeWidth;\n\tctx.strokeStyle = hexToRGBA(stroke, opacity);\n\n\tctx.beginPath();\n\n\tif (xAxis) {\n\t\tctx.moveTo(first(range), sign * outerTickSize);\n\t\tctx.lineTo(first(range), 0);\n\t\tctx.lineTo(last(range), 0);\n\t\tctx.lineTo(last(range), sign * outerTickSize);\n\t} else {\n\t\tctx.moveTo(sign * outerTickSize, first(range));\n\t\tctx.lineTo(0, first(range));\n\t\tctx.lineTo(0, last(range));\n\t\tctx.lineTo(sign * outerTickSize, last(range));\n\t}\n\tctx.stroke();\n\n\t// ctx.strokeStyle = strokeStyle;\n};\n\nexport default AxisLine;\n"]}
{"version":3,"sources":["../../../../src/lib/coordinates/CrossHairCursor.js"],"names":["React","Component","PropTypes","GenericComponent","getMouseCanvas","hexToRGBA","isDefined","isNotDefined","strokeDashTypes","getStrokeDasharray","CrossHairCursor","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","lines","helper","context","margin","ratio","originX","left","originY","top","save","setTransform","scale","translate","forEach","dashArray","line","strokeDasharray","split","map","d","strokeStyle","stroke","opacity","setLineDash","beginPath","moveTo","x1","y1","lineTo","x2","y2","restore","className","idx","rest","contextTypes","object","isRequired","number","customX","xScale","xAccessor","currentItem","mouseXY","snapX","x","Math","round","defaultProps","show","height","width","line1","line2"],"mappings":"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","file":"CrossHairCursor.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericComponent, { getMouseCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, isDefined, isNotDefined, strokeDashTypes, getStrokeDasharray } from \"../utils\";\n\nclass CrossHairCursor extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst lines = helper(this.props, moreProps);\n\n\t\tif (isDefined(lines)) {\n\n\t\t\tconst { margin, ratio } = this.context;\n\t\t\tconst originX = 0.5 * ratio + margin.left;\n\t\t\tconst originY = 0.5 * ratio + margin.top;\n\n\t\t\tctx.save();\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tctx.scale(ratio, ratio);\n\n\t\t\tctx.translate(originX, originY);\n\n\t\t\tlines.forEach(line => {\n\t\t\t\tconst dashArray = getStrokeDasharray(line.strokeDasharray).split(\",\").map(d => +d);\n\n\t\t\t\tctx.strokeStyle = hexToRGBA(line.stroke, line.opacity);\n\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(line.x1, line.y1);\n\t\t\t\tctx.lineTo(line.x2, line.y2);\n\t\t\t\tctx.stroke();\n\t\t\t});\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className } = this.props;\n\t\tconst lines = helper(this.props, moreProps);\n\n\t\tif (isNotDefined(lines)) return null;\n\n\t\treturn (\n\t\t\t<g className={`react-stockcharts-crosshair ${className}`}>\n\t\t\t\t{lines.map(({ strokeDasharray, ...rest }, idx) =>\n\t\t\t\t\t<line\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\t\t\t{...rest} />)}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tclip={false}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nCrossHairCursor.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nCrossHairCursor.contextTypes = {\n\tmargin: PropTypes.object.isRequired,\n\tratio: PropTypes.number.isRequired,\n\t// xScale for getting update event upon pan end, this is needed to get past the PureComponent shouldComponentUpdate\n\t// xScale: PropTypes.func.isRequired,\n};\n\nfunction customX(props, moreProps) {\n\tconst { xScale, xAccessor, currentItem, mouseXY } = moreProps;\n\tconst { snapX } = props;\n\tconst x = snapX\n\t\t? Math.round(xScale(xAccessor(currentItem)))\n\t\t: mouseXY[0];\n\treturn x;\n}\n\n\nCrossHairCursor.defaultProps = {\n\tstroke: \"#000000\",\n\topacity: 0.3,\n\tstrokeDasharray: \"ShortDash\",\n\tsnapX: true,\n\tcustomX,\n};\n\nfunction helper(props, moreProps) {\n\tconst {\n\t\tmouseXY, currentItem, show, height, width\n\t} = moreProps;\n\n\tconst { customX, stroke, opacity, strokeDasharray } = props;\n\n\tif (!show || isNotDefined(currentItem)) return null;\n\n\tconst line1 = {\n\t\tx1: 0,\n\t\tx2: width,\n\t\ty1: mouseXY[1],\n\t\ty2: mouseXY[1],\n\t\tstroke, strokeDasharray, opacity,\n\t};\n\tconst x = customX(props, moreProps);\n\n\tconst line2 = {\n\t\tx1: x,\n\t\tx2: x,\n\t\ty1: 0,\n\t\ty2: height,\n\t\tstroke, strokeDasharray, opacity,\n\t};\n\treturn [line1, line2];\n}\n\nexport default CrossHairCursor;\n"]}
{"version":3,"sources":["../../../src/lib/series/GroupedBarSeries.js"],"names":["GroupedBarSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","postProcessor","defaultProps","widthRatio","spaceBetweenBar","array","map","each","x","offset","groupOffset","width","groupWidth"],"mappings":"AAAA;;;;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,gB;;;AACL,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACZA,KADY;;AAElB,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AAHkB;AAIlB;;;;+BACYE,G,EAAKC,S,EAAW;AAAA,OACpBC,SADoB,GACND,SADM,CACpBC,SADoB;;;AAG5B,6CAAmBF,GAAnB,EAAwB,KAAKJ,KAA7B,EAAoCK,SAApC,EAA+CC,SAA/C,mCAAyEC,aAAzE;AACA;;;4BACSF,S,EAAW;AAAA,OACZC,SADY,GACED,SADF,CACZC,SADY;;;AAGpB;AAAA,eAAoB;AAApB,cACE,iCAAU,KAAKN,KAAf,EAAsBK,SAAtB,EAAiCC,SAAjC,mCAA2DC,aAA3D,CADF;AAGA;;;2BACQ;AACR;AAAA,aACU,KAAKN,SADf;AAAA,gBAEa,KAAKE,YAFlB;AAAA;AAAA,YAIS,CAAC,KAAD;AAJT;AAMA;;;;;;AAqBFJ,iBAAiBS,YAAjB,gBACI,2BAAiBA,YADrB;AAECC,aAAY,GAFb;AAGCC,kBAAiB;AAHlB;;AAMA,SAASH,aAAT,CAAuBI,KAAvB,EAA8B;AAC7B,QAAOA,MAAMC,GAAN,CAAU,gBAAQ;AACxB,sBACIC,IADJ;AAECC,MAAGD,KAAKC,CAAL,GAASD,KAAKE,MAAd,GAAuBF,KAAKG,WAFhC;AAGCC,UAAOJ,KAAKK;AAHb;AAKA,EANM,CAAP;AAOA;;kBAEcnB,gB","file":"GroupedBarSeries.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\nimport StackedBarSeries, { drawOnCanvasHelper, svgHelper, identityStack } from \"./StackedBarSeries\";\n\nclass GroupedBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, identityStack, postProcessor);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\treturn <g className=\"react-stockcharts-grouped-bar-series\">\n\t\t\t{svgHelper(this.props, moreProps, xAccessor, identityStack, postProcessor)}\n\t\t</g>;\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nGroupedBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidthRatio: PropTypes.number.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tyAccessor: PropTypes.arrayOf(PropTypes.func),\n};\n\nGroupedBarSeries.defaultProps = {\n\t...StackedBarSeries.defaultProps,\n\twidthRatio: 0.8,\n\tspaceBetweenBar: 5,\n};\n\nfunction postProcessor(array) {\n\treturn array.map(each => {\n\t\treturn {\n\t\t\t...each,\n\t\t\tx: each.x + each.offset - each.groupOffset,\n\t\t\twidth: each.groupWidth,\n\t\t};\n\t});\n}\n\nexport default GroupedBarSeries;\n"]}
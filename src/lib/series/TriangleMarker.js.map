{"version":3,"sources":["../../../src/lib/series/TriangleMarker.js"],"names":["Triangle","props","className","stroke","strokeWidth","opacity","fill","point","width","w","datum","x","y","getTrianglePoints","innerOpposite","innerHypotenuse","points","defaultProps","drawOnCanvas","ctx","strokeStyle","lineWidth","fillStyle","drawOnCanvasWithNoStateChange","beginPath","moveTo","lineTo","Math","cos","PI","tan"],"mappings":"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","file":"TriangleMarker.js","sourcesContent":["\"use strict\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { hexToRGBA, functor } from \"../utils\";\n\nfunction Triangle(props) {\n\tconst {\n\t\tclassName, stroke, strokeWidth,\n\t\topacity, fill, point, width\n\t} = props;\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tconst points = `\n\t\t${x} ${y - innerHypotenuse},\n\t\t${x + (w / 2)} ${y + innerOpposite},\n\t\t${x - (w / 2)} ${y + innerOpposite}\n\t`;\n\treturn (\n\t\t<polygon\n\t\t\tclassName={className}\n\t\t\tpoints={points}\n\t\t\tstroke={stroke}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\tfillOpacity={opacity}\n\t\t\tfill={fill}\n\t\t/>\n\t);\n}\nTriangle.propTypes = {\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tpoint: PropTypes.shape({\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tdatum: PropTypes.object.isRequired,\n\t}).isRequired,\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired\n};\nTriangle.defaultProps = {\n\tstroke: \"#4682B4\",\n\tstrokeWidth: 1,\n\topacity: 0.5,\n\tfill: \"#4682B4\",\n\tclassName: \"react-stockcharts-marker-triangle\",\n};\nTriangle.drawOnCanvas = (props, point, ctx) => {\n\tconst { stroke, fill, opacity, strokeWidth } = props;\n\tctx.strokeStyle = stroke;\n\tctx.lineWidth = strokeWidth;\n\tif (fill !== \"none\") {\n\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t}\n\tTriangle.drawOnCanvasWithNoStateChange(props, point, ctx);\n};\nTriangle.drawOnCanvasWithNoStateChange = (props, point, ctx) => {\n\tconst { width } = props;\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tctx.beginPath();\n\tctx.moveTo(x, y - innerHypotenuse);\n\tctx.lineTo(x + (w / 2), y + innerOpposite);\n\tctx.lineTo(x - (w / 2), y + innerOpposite);\n\tctx.stroke();\n\tctx.fill();\n};\nexport default Triangle;\n\nfunction getTrianglePoints(width) {\n\tconst innerHypotenuse = (width / 2) * (1 / Math.cos(30 * Math.PI / 180));\n\tconst innerOpposite = (width / 2) * (1 / Math.tan(60 * Math.PI / 180));\n\treturn {\n\t\tinnerOpposite,\n\t\tinnerHypotenuse\n\t};\n}\n"]}
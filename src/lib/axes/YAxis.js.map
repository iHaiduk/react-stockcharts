{"version":3,"sources":["../../../src/lib/axes/YAxis.js"],"names":["YAxis","props","context","axisZoomCallback","bind","newYDomain","chartId","yAxisZoom","helper","zoomEnabled","moreProps","defaultProps","showGrid","showTicks","showDomain","className","ticks","outerTickSize","domainClassName","fill","stroke","strokeWidth","opacity","innerTickSize","tickPadding","tickStroke","tickStrokeOpacity","fontFamily","fontSize","yZoomWidth","getMouseDelta","startXY","mouseXY","contextTypes","func","isRequired","oneOfType","number","string","chartConfig","object","axisAt","orient","width","height","axisLocation","y","w","h","x","transform","range","getScale","getYScale","bg","yPan","scale","yScale","flipYScale","invert","trueRange","trueDomain","map","copy","domain"],"mappings":"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","file":"YAxis.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Axis from \"./Axis\";\n\nclass YAxis extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.axisZoomCallback = this.axisZoomCallback.bind(this);\n\t}\n\taxisZoomCallback(newYDomain) {\n\t\tconst { chartId, yAxisZoom } = this.context;\n\t\tyAxisZoom(chartId, newYDomain);\n\t}\n\trender() {\n\t\tconst { zoomEnabled, ...moreProps } = helper(this.props, this.context);\n\t\treturn <Axis {...this.props} {...moreProps}\n\t\t\tzoomEnabled={this.props.zoomEnabled && zoomEnabled}\n\t\t\tedgeClip\n\t\t\taxisZoomCallback={this.axisZoomCallback}\n\t\t\tzoomCursorClassName=\"react-stockcharts-ns-resize-cursor\" />;\n\t}\n}\n\nYAxis.propTypes = {\n\taxisAt: PropTypes.oneOfType([\n\t\tPropTypes.oneOf([\"left\", \"right\", \"middle\"]),\n\t\tPropTypes.number\n\t]).isRequired,\n\torient: PropTypes.oneOf([\"left\", \"right\"]).isRequired,\n\tinnerTickSize: PropTypes.number,\n\touterTickSize: PropTypes.number,\n\ttickFormat: PropTypes.func,\n\ttickPadding: PropTypes.number,\n\ttickSize: PropTypes.number,\n\tticks: PropTypes.number,\n\tyZoomWidth: PropTypes.number,\n\ttickValues: PropTypes.array,\n\tshowTicks: PropTypes.bool,\n\tclassName: PropTypes.string,\n\tzoomEnabled: PropTypes.bool,\n\tonContextMenu: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n};\n\nYAxis.defaultProps = {\n\tshowGrid: false,\n\tshowTicks: true,\n\tshowDomain: true,\n\tclassName: \"react-stockcharts-y-axis\",\n\tticks: 10,\n\touterTickSize: 0,\n\tdomainClassName: \"react-stockcharts-axis-domain\",\n\tfill: \"none\",\n\tstroke: \"#FFFFFF\",\n\tstrokeWidth: 1,\n\topacity: 1,\n\tinnerTickSize: 5,\n\ttickPadding: 6,\n\ttickStroke: \"#000000\",\n\ttickStrokeOpacity: 1,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 12,\n\tyZoomWidth: 40,\n\tzoomEnabled: true,\n\tgetMouseDelta: (startXY, mouseXY) => startXY[1] - mouseXY[1],\n};\n\nYAxis.contextTypes = {\n\tyAxisZoom: PropTypes.func.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\tchartConfig: PropTypes.object.isRequired,\n};\n\nfunction helper(props, context) {\n\tconst { axisAt, yZoomWidth, orient } = props;\n\tconst { chartConfig: { width, height } } = context;\n\n\tlet axisLocation;\n\tconst y = 0, w = yZoomWidth, h = height;\n\n\tif (axisAt === \"left\") {\n\t\taxisLocation = 0;\n\t} else if (axisAt === \"right\") {\n\t\taxisLocation = width;\n\t} else if (axisAt === \"middle\") {\n\t\taxisLocation = (width) / 2;\n\t} else {\n\t\taxisLocation = axisAt;\n\t}\n\n\tconst x = (orient === \"left\") ? -yZoomWidth : 0;\n\n\treturn {\n\t\ttransform: [axisLocation, 0],\n\t\trange: [0, height],\n\t\tgetScale: getYScale,\n\t\tbg: { x, y, h, w },\n\t\tzoomEnabled: context.chartConfig.yPan,\n\t};\n}\n\nfunction getYScale(moreProps) {\n\tconst { yScale: scale, flipYScale, height } = moreProps.chartConfig;\n\tif (scale.invert) {\n\t\tconst trueRange = flipYScale ? [0, height] : [height, 0];\n\t\tconst trueDomain = trueRange.map(scale.invert);\n\t\treturn scale.copy()\n\t\t\t.domain(trueDomain)\n\t\t\t.range(trueRange);\n\t}\n\treturn scale;\n}\n\nexport default YAxis;\n"]}
{"version":3,"sources":["../../../src/lib/tooltip/MovingAverageTooltip.js"],"names":["SingleMAToolTip","props","handleClick","bind","e","onClick","forChart","options","chartId","textFill","labelFill","translate","origin","color","fontFamily","fontSize","displayName","value","MovingAverageTooltip","renderSVG","moreProps","displayValuesFor","chartConfig","className","width","originProp","displayFormat","height","currentItem","config","x","y","ox","oy","map","each","idx","yValue","yAccessor","tooltipLabel","type","windowSize","yDisplayValue","stroke","defaultProps"],"mappings":"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","file":"MovingAverageTooltip.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nimport { functor } from \"../utils\";\n\nclass SingleMAToolTip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick(e) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick({ chartId: forChart, ...options }, e);\n\t}\n\trender() {\n\t\tconst { textFill, labelFill } = this.props;\n\t\tconst translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n\t\treturn (\n\t\t\t<g transform={translate}>\n\t\t\t\t<line x1={0} y1={2} x2={0} y2={28} stroke={this.props.color} strokeWidth=\"4px\"/>\n\t\t\t\t<ToolTipText x={5} y={11}\n\t\t\t\t\tfontFamily={this.props.fontFamily} fontSize={this.props.fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{this.props.displayName}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={textFill}>{this.props.value}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t\t<rect x={0} y={0} width={55} height={30}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tfill=\"none\" stroke=\"none\" />\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nSingleMAToolTip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tcolor: PropTypes.string.isRequired,\n\tdisplayName: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tforChart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\toptions: PropTypes.object.isRequired,\n};\n\nclass MovingAverageTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { displayValuesFor } = this.props;\n\n\t\tconst { chartId } = moreProps;\n\t\tconst { chartConfig } = moreProps;\n\n\t\tconst { className, onClick, width, fontFamily, fontSize, textFill, labelFill } = this.props;\n\t\tconst { origin: originProp, displayFormat, options } = this.props;\n\t\tconst { chartConfig: { height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst config = chartConfig;\n\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\t\tconst [ox, oy] = config.origin;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${ ox + x }, ${ oy + y })`} className={className}>\n\t\t\t\t{options\n\t\t\t\t\t.map((each, idx) => {\n\t\t\t\t\t\tconst yValue = currentItem && each.yAccessor(currentItem);\n\n\t\t\t\t\t\tconst tooltipLabel = `${each.type} (${each.windowSize})`;\n\t\t\t\t\t\tconst yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\t\t\t\t\t\treturn <SingleMAToolTip\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\torigin={[width * idx, 0]}\n\t\t\t\t\t\t\tcolor={each.stroke}\n\t\t\t\t\t\t\tdisplayName={tooltipLabel}\n\t\t\t\t\t\t\tvalue={yDisplayValue}\n\t\t\t\t\t\t\toptions={each}\n\t\t\t\t\t\t\tforChart={chartId}\n\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\ttextFill={textFill}\n\t\t\t\t\t\t\tlabelFill={labelFill}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nMovingAverageTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number,\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\ttype: PropTypes.string.isRequired,\n\t\tstroke: PropTypes.string.isRequired,\n\t\twindowSize: PropTypes.number.isRequired,\n\t\techo: PropTypes.any,\n\t})),\n};\n\nMovingAverageTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 10],\n\twidth: 65,\n};\n\nexport default MovingAverageTooltip;\n"]}
{"version":3,"sources":["../../../src/lib/coordinates/EdgeIndicator.js"],"names":["EdgeIndicator","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","edge","helper","defaultProps","className","type","orient","edgeAt","textFill","displayFormat","yAxisPad","rectHeight","rectWidth","arrowWidth","fontFamily","fontSize","dx","hideLine","fill","opacity","stroke","strokeOpacity","strokeWidth","lineStroke","lineOpacity","lineStrokeDasharray","itemType","yAccessor","plotData","item","getEdge","edgeType","xScale","yScale","chartConfig","xAccessor","width","yValue","xValue","x1","Math","round","y1","left","right","edgeX","coordinate","show","x2","y2"],"mappings":"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","file":"EdgeIndicator.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { drawOnCanvas, renderSVG } from \"./EdgeCoordinateV3\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { first, last, isDefined, functor, noop, strokeDashTypes } from \"../utils\";\n\nclass EdgeIndicator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\tdrawOnCanvas(ctx, props);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\treturn renderSVG(props);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tedgeClip\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nEdgeIndicator.propTypes = {\n\tyAccessor: PropTypes.func,\n\n\ttype: PropTypes.oneOf([\"horizontal\"]),\n\tclassName: PropTypes.string,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\ttextFill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\titemType: PropTypes.oneOf([\"first\", \"last\"]).isRequired,\n\torient: PropTypes.oneOf([\"left\", \"right\"]),\n\tedgeAt: PropTypes.oneOf([\"left\", \"right\"]),\n\tdisplayFormat: PropTypes.func,\n\trectHeight: PropTypes.number,\n\trectWidth: PropTypes.number,\n\tarrowWidth: PropTypes.number,\n\tlineStrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nEdgeIndicator.defaultProps = {\n\tclassName: \"react-stockcharts-edgeindicator\",\n\n\ttype: \"horizontal\",\n\torient: \"left\",\n\tedgeAt: \"left\",\n\ttextFill: \"#FFFFFF\",\n\tdisplayFormat: format(\".2f\"),\n\tyAxisPad: 0,\n\trectHeight: 20,\n\trectWidth: 50,\n\tarrowWidth: 10,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 13,\n\tdx: 0,\n\thideLine: false,\n\tfill: \"#8a8a8a\",\n\topacity: 1,\n\n\tstroke: noop,\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tlineStroke: \"#000000\",\n\tlineOpacity: 0.3,\n\tlineStrokeDasharray: \"ShortDash\",\n};\n\nfunction helper(props, moreProps) {\n\tconst { itemType, yAccessor } = props;\n\tconst { plotData } = moreProps;\n\n\tconst item = itemType === \"first\"\n\t\t? first(plotData, yAccessor)\n\t\t: last(plotData, yAccessor);\n\n\t// var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\tconst edge = isDefined(item)\n\t\t? getEdge(props, moreProps, item)\n\t\t: null;\n\n\treturn edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n\tconst { type: edgeType, displayFormat, edgeAt, yAxisPad, orient } = props;\n\n\tconst { yAccessor, fill, textFill, rectHeight, rectWidth, arrowWidth } = props;\n\tconst { fontFamily, fontSize } = props;\n\tconst { stroke } = props;\n\n\tconst { xScale, chartConfig: { yScale }, xAccessor, width } = moreProps;\n\n\tconst yValue = yAccessor(item),\n\t\txValue = xAccessor(item);\n\n\tconst x1 = Math.round(xScale(xValue)),\n\t\ty1 = Math.round(yScale(yValue));\n\n\tconst [left, right] = [0, width];\n\tconst edgeX = edgeAt === \"left\"\n\t\t? left - yAxisPad\n\t\t: right + yAxisPad;\n\n\treturn {\n\t\t// ...props,\n\t\tcoordinate: displayFormat(yValue),\n\t\tshow: true,\n\t\ttype: edgeType,\n\t\torient,\n\t\tedgeAt: edgeX,\n\t\tfill: functor(fill)(item),\n\t\tstroke: functor(stroke)(item),\n\t\tfontFamily, fontSize,\n\t\ttextFill: functor(textFill)(item),\n\t\trectHeight, rectWidth, arrowWidth,\n\t\tx1,\n\t\ty1,\n\t\tx2: right,\n\t\ty2: y1,\n\t};\n}\n\nexport default EdgeIndicator;\n"]}